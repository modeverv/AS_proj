package sudoku {	// === OptionsPanel ===	import flash.display.Sprite;	import flash.display.Shape;	import flash.text.TextField;	import flash.text.TextFormat;	import flash.text.TextFormatAlign;	import flash.events.Event;	import flash.net.SharedObject;/** * The OptionsPanel class implements an options "dialog" for the Sudoku puzzle. */public class OptionsPanel extends Sprite {	private var _lso:SharedObject;	private var flushResult:String;			/**	 * Creates a new OptionsPanel instance, with specified position and size.	 * This panel has no Cancel or OK button, only options. It relies on a "Resume" button	 * elsewhere in the application.	 *	 * When the panel instantiated, it will be hidden. 	 * Use the Show() and Hide() methods to control visibility.	 *	 * Use addOption() to install the options to be displayed.	 * Use getOption() and setOption() to read and write the values.	 *	 * @param x The x-position of the options panel.	 * @param y The y-position of the options panel.	 * @param w The width of the options panel.	 * @param h The height of the options panel.	 */	public function OptionsPanel(x:Number, y:Number, w:Number, h:Number) {		this.x = x;		this.y = y;		visible = false;				// draw rect with drop shadow to cover at least part of the puzzle		var rect:Shape = new Shape();		rect.graphics.beginFill(0xffffff, .9);		rect.graphics.drawRect(0, 0, w, h);		rect.graphics.endFill();		addChild(rect);				// Label the panel "Options"		var label:TextField = new TextField();		label.selectable = false;		// set the text format		var tf:TextFormat = new TextFormat("Arial,Helvetica,Verdana", 24);		tf.align = TextFormatAlign.CENTER;		label.defaultTextFormat = tf;		label.y = 10;		label.x = 0;		label.width = w;		label.height = 32;		label.text = "Options";		addChild(label);		_lso = SharedObject.getLocal("Options");			}		/**	 * Hides the options panel, and also flushes the data to the local SharedObject.	 */	public function Hide():void {		visible = false;		flushResult = _lso.flush();	}		/**	 * Reveals the options panel.	 */	public function Show():void {		visible = true;	}		/**	 * Returns the current value for the option named optName.	 *	 * @param optName The name of the option to read.	 */	public function getOption(optName:String):* {		return _lso.data[optName];	}		/**	 * Set a new value for the option named optName.	 *	 * @param optName The name of the option to set.	 * @param optValue The new value.	 */	public function setOption(optName:String, optValue:*):void {		_lso.data[optName] = optValue;	}		/**	 * Add an option at x,y with width w.	 * Any control can be added, although only CheckBox has been tested.	 *	 * @param x The x-position within the options panel.	 * @param y The y-position within the options panel.	 * @param w The width of the option control.	 * @param option The option control.	 */	public function addOption(x:Number, y:Number, w:Number, option:*):void {		option.x = x;		option.y = y;		option.width = w;		addChild(option);	}} // end of class} // end of package