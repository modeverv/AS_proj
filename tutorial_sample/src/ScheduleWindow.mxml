<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" width="400" height="170" layout="absolute" showCloseButton="false" horizontalScrollPolicy="off" verticalScrollPolicy="off" title="スケジュールを設定">

	<mx:Script>
		<![CDATA[
			import org.mineap.NNDD.model.Schedule;
			import mx.events.ListEvent;
			
			private var _schedule:Schedule = new Schedule();
			
			private var _isScheduleEnable:Boolean = false;
			
			[Bindable]
			private var intervalArray:Array = new Array("毎週", "毎日");

			[Bindable]
			private var dayOfTheWeekArray:Array = new Array("日曜日", "月曜日", "火曜日", "水曜日", "木曜日", "金曜日", "土曜日");
			
			/**
			 * 指定されたScheduleオブジェクトを使って画面上の表示を初期化します。<br>
			 * ScheduleWindowsが表示される前に呼び出す必要があります。
			 */
			public function initSchedule(schedule:Schedule, isScheduleEnable:Boolean):void{
				this._schedule = schedule;
				this._isScheduleEnable = isScheduleEnable;
				
				this.comboBox_Interval.selectedIndex = this._schedule.interval;
				if(this._schedule.interval == Schedule.DAILY){
					this.comboBox_dayOfTheWeek.enabled = false;
				}else{
					this.comboBox_dayOfTheWeek.enabled = true;
				}
				this.stepper_houre.value = this._schedule.hour;
				this.stepper_minutes.value = this._schedule.minutes;
				this.checkBox_isEnableSchedule.selected = isScheduleEnable;
			}
			
			/**
			 * スケジュールを返します。
			 */
			public function get schedule():Schedule{
				return this._schedule;
			}
			
			/**
			 * スケジュール管理をするかどうか、を返します。
			 */
			public function get isScheduleEnable():Boolean{
				return this._isScheduleEnable;
			}
			
			protected function button_save_clickHandler(event:MouseEvent):void
			{
				this._schedule = new Schedule(this.comboBox_Interval.selectedIndex, this.comboBox_dayOfTheWeek.selectedIndex, this.stepper_houre.value, this.stepper_minutes.value);
				dispatchEvent(new Event(Event.COMPLETE));
			}

			protected function button_cancel_clickHandler(event:MouseEvent):void
			{
				this._schedule = new Schedule(this.comboBox_Interval.selectedIndex, this.comboBox_dayOfTheWeek.selectedIndex, this.stepper_houre.value, this.stepper_minutes.value);
				dispatchEvent(new Event(Event.CANCEL));
			}

			protected function comboBox_Interval_changeHandler(event:ListEvent):void
			{
				if((event.currentTarget as ComboBox).selectedIndex == 1){
					this.comboBox_dayOfTheWeek.enabled = false;
				}else{
					this.comboBox_dayOfTheWeek.enabled = true;
				}
			}

			protected function checkBox_isEnableSchedule_changeHandler(event:Event):void
			{
				this._isScheduleEnable = this.checkBox_isEnableSchedule.selected;
			}

		]]>
	</mx:Script>
	
	<mx:CheckBox label="ダウンロードをスケジュールする" left="10" top="10" id="checkBox_isEnableSchedule" change="checkBox_isEnableSchedule_changeHandler(event)"/>
	
	<mx:ComboBox width="65" left="10" top="40" id="comboBox_Interval" dataProvider="{intervalArray}" change="comboBox_Interval_changeHandler(event)"
		selectedIndex="0">
	</mx:ComboBox>
	<mx:Label text="、" left="83" top="42"/>
	
	<mx:ComboBox width="100" left="110" top="40" id="comboBox_dayOfTheWeek" dataProvider="{dayOfTheWeekArray}">
	</mx:ComboBox>
	<mx:Label text="の、" left="218" top="42"/>
	
	<mx:NumericStepper left="10" top="68" id="stepper_houre" minimum="0" maximum="23"/>
	<mx:Label text="時" left="76" top="70"/>
	
	<mx:NumericStepper left="103" top="68" id="stepper_minutes" minimum="0" maximum="59"/>
	<mx:Label text="分" left="169" top="70"/>
	
	<mx:Label text="にダウンロードを開始する。" left="196" top="70"/>
	
	<mx:Button label="キャンセル" width="75" right="93" top="96" id="button_cancel" click="button_cancel_clickHandler(event)"/>
	<mx:Button label="設定" width="75" right="10" top="96" height="22" id="button_save" click="button_save_clickHandler(event)"/>
	
</mx:TitleWindow>
