/*** Env by gskinner.com. Nov 4, 2008* Visit www.gskinner.com/blog for documentation, updates and more free code.*** Copyright (c) 2008 Grant Skinner* * Permission is hereby granted, free of charge, to any person* obtaining a copy of this software and associated documentation* files (the "Software"), to deal in the Software without* restriction, including without limitation the rights to use,* copy, modify, merge, publish, distribute, sublicense, and/or sell* copies of the Software, and to permit persons to whom the* Software is furnished to do so, subject to the following* conditions:* * The above copyright notice and this permission notice shall be* included in all copies or substantial portions of the Software.* * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR* OTHER DEALINGS IN THE SOFTWARE.**/package com.gskinner.utils {		public class Env {				private static var _vars:Object;		private static var _instance:Env;				public function Env () { _vars={}; }				public static function setValue(p_key:String, p_val:*) {			getInstance().isetValue(p_key, p_val);		}				public static function getValue(p_key:String):*{			return getInstance().igetValue(p_key);		}				protected function isetValue(p_key:String, p_val:*):void {			_vars[p_key] = p_val;		}				protected function igetValue(p_key:String):* {			return _vars[p_key]?_vars[p_key]:null;		}				protected static function getInstance():Env {			if (!_instance) { _instance = new Env();  }			return _instance;		}				public static function toString() {			for (var n:String in _vars) {				//trace(n + '='+ _vars[n]);			}		}			}	}